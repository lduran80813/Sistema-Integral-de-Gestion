@model SIG.Entidades.CuentasCredito
@{
    ViewBag.Title = "CxC";
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
    }

    .container {
        margin: 50px auto;
        padding: 20px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        max-height: 100vh;
        overflow-y: auto;
    }

    h1 {
        text-align: center;
        color: #333;
    }

    form {
        display: flex;
        flex-direction: column;
    }

    label {
        margin-bottom: 5px;
        font-weight: bold;
        color: #555;
    }

    input, select, textarea {
        margin-bottom: 15px;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 4px;
        width: 100%;
        box-sizing: border-box;
    }

    button {
        padding: 10px 15px;
        background-color: #5cb85c;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
    }

        button:hover {
            background-color: #4cae4c;
        }
</style>

<body>

    <div class="container">
        <h2>Cuentas por cobrar</h2>
        <br />
        <a class="btn btn-primary" href="@Url.Action("HistorialAjustesCxC", "Contabilidad")">Historial de ajustes manuales</a>
        <div class="row">
            <div class="col-12">



                @if (ViewBag.msj != null)
                {
                    <div class="alert alert-info" role="alert" style="text-align:center">
                        @ViewBag.msj
                    </div>
                }

                <table id="tablaCxC" class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Id factura</th>
                            <th>Último pago</th>
                            <th>Saldo</th>
                            <th>Pagar</th>
                            <th>Ajuste manual</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ListaCxC)
                        {
                            <tr>
                                <td>@item.IdFactura</td>
                                <td>@item.Fecha.ToString("dd/MM/yyyy")</td>
                                <td>@item.Saldo.ToString("N2")</td>
                                <td>
                                    <button type="button" class="btn btn-primary AbrirModalPagar" data-bs-toggle="modal" data-bs-target="#ModalPagoRecibo"
                                            data-id="@item.IdFactura" data-saldo="@item.Saldo">
                                        Pagar
                                    </button>
                                </td>
                                <td>
                                    <a class="btn btn-primary" href="@Url.Action("ListaPagosCxC", "Contabilidad", new {id = item.IdFactura})">Ver Pagos</a>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</body>


<div class="modal fade" id="ModalPagoRecibo" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fs-5" id="exampleModalLabel">Pagar cuenta</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("ContaCobroCxC", "Contabilidad"))
                {
                    @Html.Hidden("Id_Cuenta", "", new { id = "IdCuenta" })
                    <div class="mb-3">
                        @Html.Label("Saldo actual:", new { @for = "saldo" })
                        <input type="text" id="saldo" class="form-control" readonly /> <!-- Cambiado a 'text' para control de formato -->
                    </div>
                    <div id="metodo-container" style="display:none;">
                        @Html.Label("Método de pago", new { @for = "metodo" })
                        @Html.DropDownListFor(m => m.metodo_pago, ViewBag.MetodoPago as List<SelectListItem>, new { @class = "form-select", @id = "metodo", metodo = "metodo", @required = "true" })
                    </div>

                    <div id="financiera-container" style="display:none;">
                        @Html.Label("Entidad Financiera", new { @for = "financieras" })
                        @Html.DropDownListFor(m => m.entidadFinanciera, ViewBag.EntidadesFinancieras as List<SelectListItem>, new { @class = "form-select", @id = "financieras", @name = "financieras" })

                        @Html.Label("Número de trasacción de referencia", new { @for = "referencia" })
                        @Html.TextBoxFor(m => m.transaccionRef, new { @type = "number", @class = "form-control", @id = "referencia", @name = "referencia", @required = "true" })
                    </div>
                    <div id="Abono-container" style="display:none;">
                        @Html.Label("Ingrese el monto a pagar", new { @for = "abono" })
                        @Html.TextBoxFor(m => m.montoPago, new { @class = "form-control", @id = "abono", @name = "abono", @required = "true", @onkeypress = "return ValidarNumeros(this.id)" })
                    </div>

                    @Html.Label("Descripción de la transacción", new { @for = "referencia" })
                    @Html.TextBoxFor(m => m.descripcion, new { @class = "form-control", @id = "referencia", @name = "referencia", @maxlength = "100", @required = "true" })
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Pagar</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script src="~/root/plugins/jquery/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $("#tablaCxC").DataTable({
            language: {
                url: '//cdn.datatables.net/plug-ins/2.0.2/i18n/es-ES.json'
            },
            columnDefs: [{ type: 'string', target: [0, 1, 2, 3, 4] }]
        });

        function verificaTipoVentaYMetodoPago() {
            var metodoPago = $('#metodo').val();

            $('#metodo-container').show();

            // Mostrar u ocultar el contenedor de financiera
            if (metodoPago === '1') { // Efectivo
                $('#financiera-container').hide();
            } else { // Método diferente de efectivo
                $('#financiera-container').show();
            }

            $('#Abono-container').show();
        }

        // Ejecutar la función al cambiar el método de pago
        $('#metodo').change(verificaTipoVentaYMetodoPago);

        $(document).on("click", ".AbrirModalPagar", function () {
            // Captura y asigna el data-id y data-saldo al modal
            var idCuenta = $(this).data('id');
            var saldo = $(this).data('saldo');

            $("#IdCuenta").val(idCuenta);
            $("#saldo").val(saldo);

            // Llama a la función para mostrar/ocultar el contenedor según el método de pago
            verificaTipoVentaYMetodoPago();
        });
    });

    $("#abono").on("input", function () {
        var abono = parseFloat($(this).val());
        var totalTransaccion = $("#ModalPagoRecibo").data("total");

        if (abono > totalTransaccion) {
            alert("El monto del abono no puede ser superior al total de la transacción: " + totalTransaccion.toFixed(2));
            $(this).val(totalTransaccion.toFixed(2));
        }
    });
    function ValidarNumeros(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;

        if (charCode >= 48 && charCode <= 57) {
            return true;
        }
        else {
            return false;
        }
    }
    $(document).ready(function () {
        $("#ModalPagoRecibo form").on("submit", function (e) {
            e.preventDefault();

            var formData = $(this).serialize();
            $.ajax({
                url: $(this).attr("action"),
                type: $(this).attr("method"),
                data: formData,
                success: function (response) {
                    if (response.success) {
                        $('#ModalPagoRecibo').modal('hide');

                        window.location.href = response.pdfUrl;


                        setTimeout(function () {
                            window.location.href = '/Contabilidad/CxC';
                        }, 1000);
                    } else {
                        alert(response.message || "Hubo un error al procesar el pago.");
                    }
                },
                error: function () {
                    alert("Ocurrió un error en la solicitud. Por favor, intenta de nuevo.");
                }
            });
        });
    });

</script>

