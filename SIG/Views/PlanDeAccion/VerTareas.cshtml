@model IEnumerable<SIG.Entidades.Tarea>
@{
    ViewBag.Title = "Tareas del Plan de Acción";
    var plan = ViewBag.Plan as SIG.Entidades.PlanDeAccion;
}

<!-- Enlace a Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

<div class="container mt-5">
    <h3 class="text-center text-secondary">@ViewBag.Title</h3>

 
    <div class="info-box mb-4">
        <div class="info-content">
            <div class="info-text">

                <h4>Plan de Acción: @plan.NombrePlan</h4> <i class="bi bi-clipboard-check"></i>
                <span><strong>Descripción:</strong> @plan.DescripcionPlan</span>
                <span><strong>Fecha de Inicio:</strong> @plan.FechaInicio.ToString("dd/MM/yyyy")</span>
                <span><strong>Fecha de Finalización:</strong> @(plan.FechaFinalizacion.HasValue ? plan.FechaFinalizacion.Value.ToString("dd/MM/yyyy") : "No disponible")</span>
                <span><strong>Estado:</strong> @plan.Estado</span>
            </div>
        </div>
    </div>


    @if (Model != null && Model.Any())
    {
        <div >
            <table id="tablaTareas" class="table table-modern">
                <thead>
                    <tr>
                        <th>Descripción</th>
                        <th>Responsable</th>
                        <th>Estado</th>
                        <th>Calificación (1-10)</th>
                        <th>Observación</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var tarea in Model)
                    {
                        <tr>
                            <td>@tarea.DescripcionTarea</td>
                            <td>@(tarea.Responsable?.Nombre ?? "No asignado")</td>
                            <td>
                                @Html.DropDownList(
                                    $"estado-{tarea.Id}",
                                    new SelectList(ViewBag.EstadosTarea, "Value", "Text", tarea.EstadoTarea.Id),
                                    new { @class = "form-control", required = "true" }
                                )
                            </td>

                            <td>
                                <input type="number" min="1" max="10" class="form-control" id="calificacion-@tarea.Id" value="@tarea.Calificacion">
                            </td>
                            <td>
                                <textarea class="form-control" id="observacion-@tarea.Id">@tarea.Observacion</textarea>
                            </td>
                            <td>
                                <button class="btn btn-gradient guardar-evaluacion" data-tarea-id="@tarea.Id">
                                    Guardar
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-warning text-center">No hay tareas asociadas a este plan.</div>
    }

    <div class="row mt-4">
        <div class="col text-center">
            <a href="@Url.Action("ListarPlanesUsuario", "PlanDeAccion")" class="btn btn-delete btn-lg px-5">
                Regresar
            </a>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#tablaTareas").DataTable({
            language: {
                url: "//cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json"
            },
            autoWidth: false,
            responsive: true,
            pageLength: 10
        });

        $('.guardar-evaluacion').on('click', function () {
            const tareaId = $(this).data('tarea-id');
            const estado = $(`#estado-${tareaId}`).val();
            const calificacion = $(`#calificacion-${tareaId}`).val();
            const observacion = $(`#observacion-${tareaId}`).val();

            if (!calificacion || calificacion < 1 || calificacion > 10) {
                Swal.fire({
                    title: "Error",
                    text: "Calificación inválida. Debe estar entre 1 y 10.",
                    icon: "error",
                    confirmButtonText: "Aceptar"
                });
                return;
            }

            $.post('@Url.Action("GuardarEvaluacion", "PlanDeAccion")', { tareaId, estado, calificacion, observacion })
                .done(function (response) {
                    Swal.fire({
                        title: "Éxito",
                        text: "Calificación guardada correctamente.",
                        icon: "success",
                        confirmButtonText: "Aceptar"
                    });
                })
                .fail(function () {
                    Swal.fire({
                        title: "Error",
                        text: "Hubo un problema al guardar la calificación.",
                        icon: "error",
                        confirmButtonText: "Aceptar"
                    });
                });
        });
    });
</script>

<style>

    .info-box {
        background-color: #222222;
        border-radius: 8px;
        padding: 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease-in-out;
        color: white;
        text-align: center;
    }

        .info-box:hover {
            transform: scale(1.05);
        }

    .info-content {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 15px;
        font-size: 16px;
        font-weight: bold;
    }

        .info-content i {
            font-size: 28px;
            color: #01e173;
        }

    .info-title {
        font-size: 20px;
        font-weight: bold;
    }


    .table-modern {
        border-radius: 0;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
        background-color: #ffffff;
        overflow: hidden;
        border-collapse: collapse;
        width: 100%;
        font-family: 'Poppins', sans-serif;
        border: 1px solid black;
        transition: all 0.5s ease-in-out;
    }

        .table-modern:hover {
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.6);
            transform: scale(1.01);
        }

        .table-modern thead {
            background: black;
            color: white;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .table-modern th, .table-modern td {
            padding: 14px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid black;
        }

    .btn-gradient {
        background: linear-gradient(to right, #5b8c5a, #2f5930);
        color: white;
        border: none;
        padding: 12px 24px;
        font-size: 18px;
        font-weight: bold;
        border-radius: 6px;
        transition: transform 0.2s ease-in-out, background 0.3s ease-in-out;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    }

        .btn-gradient:hover {
            transform: scale(1.1);
            background: linear-gradient(to right, #2f5930, #5b8c5a);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
        }

    .btn-delete {
        background: linear-gradient(to right, #6c757d, #495057);
        color: white;
        border: none;
        padding: 12px 24px;
        font-size: 18px;
        font-weight: bold;
        border-radius: 6px;
        transition: transform 0.2s ease-in-out;
    }

        .btn-delete:hover {
            transform: scale(1.1);
            background: linear-gradient(to right, #495057, #6c757d);
        }
</style>
