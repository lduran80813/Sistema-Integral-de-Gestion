//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIG.BaseDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SistemaIntegralGestionEntities : DbContext
    {
        public SistemaIntegralGestionEntities()
            : base("name=SistemaIntegralGestionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Adm_Permiso> Adm_Permiso { get; set; }
        public virtual DbSet<Adm_Rol> Adm_Rol { get; set; }
        public virtual DbSet<Conta_TipoTransaccion> Conta_TipoTransaccion { get; set; }
        public virtual DbSet<Conta_Transaccion> Conta_Transaccion { get; set; }
        public virtual DbSet<Emp_BitacoraIngreso> Emp_BitacoraIngreso { get; set; }
        public virtual DbSet<Emp_ContactoEmergencia> Emp_ContactoEmergencia { get; set; }
        public virtual DbSet<Emp_Departamento> Emp_Departamento { get; set; }
        public virtual DbSet<Emp_Puesto> Emp_Puesto { get; set; }
        public virtual DbSet<Emp_RemuneracionDeduccion> Emp_RemuneracionDeduccion { get; set; }
        public virtual DbSet<Emp_Vacaciones> Emp_Vacaciones { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Entregas> Entregas { get; set; }
        public virtual DbSet<PDA_Tarea> PDA_Tarea { get; set; }
        public virtual DbSet<PlanDeAccion> PlanDeAccion { get; set; }
        public virtual DbSet<Prov_Compra> Prov_Compra { get; set; }
        public virtual DbSet<Prov_CompraDetalle> Prov_CompraDetalle { get; set; }
        public virtual DbSet<Prov_Contacto> Prov_Contacto { get; set; }
        public virtual DbSet<Prov_Pago> Prov_Pago { get; set; }
        public virtual DbSet<Prov_Producto> Prov_Producto { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<Ticket> Ticket { get; set; }
        public virtual DbSet<Ticket_Estado> Ticket_Estado { get; set; }
        public virtual DbSet<Ticket_Prioridad> Ticket_Prioridad { get; set; }
        public virtual DbSet<Ticket_Tipo> Ticket_Tipo { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Venta_Cliente> Venta_Cliente { get; set; }
        public virtual DbSet<Venta_Estado> Venta_Estado { get; set; }
        public virtual DbSet<Venta_Factura> Venta_Factura { get; set; }
        public virtual DbSet<Venta_FacturaDetalle> Venta_FacturaDetalle { get; set; }
        public virtual DbSet<Venta_MetodoPago> Venta_MetodoPago { get; set; }
        public virtual DbSet<Venta_Producto> Venta_Producto { get; set; }
        public virtual DbSet<Venta_ProductoEstado> Venta_ProductoEstado { get; set; }
        public virtual DbSet<Venta_Carrito> Venta_Carrito { get; set; }
    
        public virtual ObjectResult<ConsultarCarrito_Result> ConsultarCarrito(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCarrito_Result>("ConsultarCarrito", idUsuarioParameter);
        }
    
        public virtual int RegistrarCarrito(Nullable<int> idUsuario, Nullable<int> idProducto, Nullable<int> cantidad)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarCarrito", idUsuarioParameter, idProductoParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<ValidarExistencias_Result> ValidarExistencias(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidarExistencias_Result>("ValidarExistencias", idUsuarioParameter);
        }
    
        public virtual int EliminarProductoCarrito(Nullable<int> idUsuario, Nullable<int> idProducto)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarProductoCarrito", idUsuarioParameter, idProductoParameter);
        }
    }
}
