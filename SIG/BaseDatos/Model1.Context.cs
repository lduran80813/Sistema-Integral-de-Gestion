//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIG.BaseDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SistemaIntegralGestionEntities : DbContext
    {
        public SistemaIntegralGestionEntities()
            : base("name=SistemaIntegralGestionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Adm_Permiso> Adm_Permiso { get; set; }
        public virtual DbSet<Adm_Rol> Adm_Rol { get; set; }
        public virtual DbSet<Catalogo_Compra> Catalogo_Compra { get; set; }
        public virtual DbSet<CategoriaPlan> CategoriaPlan { get; set; }
        public virtual DbSet<Conta_CuentasContables> Conta_CuentasContables { get; set; }
        public virtual DbSet<Conta_CxC> Conta_CxC { get; set; }
        public virtual DbSet<Conta_CxP> Conta_CxP { get; set; }
        public virtual DbSet<Conta_TipoTransaccion> Conta_TipoTransaccion { get; set; }
        public virtual DbSet<Conta_Transaccion> Conta_Transaccion { get; set; }
        public virtual DbSet<DiasVacacionesDisponibles> DiasVacacionesDisponibles { get; set; }
        public virtual DbSet<Emp_BitacoraIngreso> Emp_BitacoraIngreso { get; set; }
        public virtual DbSet<Emp_Capacitacion> Emp_Capacitacion { get; set; }
        public virtual DbSet<Emp_Capacitacion_Participantes> Emp_Capacitacion_Participantes { get; set; }
        public virtual DbSet<Emp_ContactoEmergencia> Emp_ContactoEmergencia { get; set; }
        public virtual DbSet<Emp_Departamento> Emp_Departamento { get; set; }
        public virtual DbSet<Emp_Puesto> Emp_Puesto { get; set; }
        public virtual DbSet<Emp_RemuneracionDeduccion> Emp_RemuneracionDeduccion { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<EntidadesFinancieras> EntidadesFinancieras { get; set; }
        public virtual DbSet<Entregas> Entregas { get; set; }
        public virtual DbSet<EstadoCompra> EstadoCompra { get; set; }
        public virtual DbSet<EstadosFinancieros> EstadosFinancieros { get; set; }
        public virtual DbSet<HistorialModificacion> HistorialModificacion { get; set; }
        public virtual DbSet<HistorialPedido> HistorialPedido { get; set; }
        public virtual DbSet<Modulos> Modulos { get; set; }
        public virtual DbSet<Notificaciones> Notificaciones { get; set; }
        public virtual DbSet<Notificaciones_basicas> Notificaciones_basicas { get; set; }
        public virtual DbSet<Notificaciones_usuario> Notificaciones_usuario { get; set; }
        public virtual DbSet<PDA_Estado> PDA_Estado { get; set; }
        public virtual DbSet<PDA_Tarea> PDA_Tarea { get; set; }
        public virtual DbSet<PDA_TipoAccion> PDA_TipoAccion { get; set; }
        public virtual DbSet<Pedido> Pedido { get; set; }
        public virtual DbSet<PlanDeAccion> PlanDeAccion { get; set; }
        public virtual DbSet<Prov_Compra> Prov_Compra { get; set; }
        public virtual DbSet<Prov_CompraDetalle> Prov_CompraDetalle { get; set; }
        public virtual DbSet<Prov_Contacto> Prov_Contacto { get; set; }
        public virtual DbSet<Prov_Pago> Prov_Pago { get; set; }
        public virtual DbSet<Prov_Producto> Prov_Producto { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<SolicitudesVacaciones> SolicitudesVacaciones { get; set; }
        public virtual DbSet<Ticket> Ticket { get; set; }
        public virtual DbSet<Ticket_Estado> Ticket_Estado { get; set; }
        public virtual DbSet<Ticket_Prioridad> Ticket_Prioridad { get; set; }
        public virtual DbSet<Ticket_Tipo> Ticket_Tipo { get; set; }
        public virtual DbSet<Venta_Carrito> Venta_Carrito { get; set; }
        public virtual DbSet<Venta_Cliente> Venta_Cliente { get; set; }
        public virtual DbSet<Venta_Estado> Venta_Estado { get; set; }
        public virtual DbSet<Venta_Factura> Venta_Factura { get; set; }
        public virtual DbSet<Venta_FacturaDetalle> Venta_FacturaDetalle { get; set; }
        public virtual DbSet<Venta_MetodoPago> Venta_MetodoPago { get; set; }
        public virtual DbSet<Venta_Producto> Venta_Producto { get; set; }
        public virtual DbSet<Venta_ProductoEstado> Venta_ProductoEstado { get; set; }
        public virtual DbSet<Venta_Tipo> Venta_Tipo { get; set; }
        public virtual DbSet<Audit_Venta_Producto> Audit_Venta_Producto { get; set; }
    
        public virtual ObjectResult<actualizaInventario_Result> actualizaInventario(Nullable<int> idProducto, Nullable<int> nuevoInventario, string motivo, Nullable<int> idUsuario)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var nuevoInventarioParameter = nuevoInventario.HasValue ?
                new ObjectParameter("NuevoInventario", nuevoInventario) :
                new ObjectParameter("NuevoInventario", typeof(int));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("Motivo", motivo) :
                new ObjectParameter("Motivo", typeof(string));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<actualizaInventario_Result>("actualizaInventario", idProductoParameter, nuevoInventarioParameter, motivoParameter, idUsuarioParameter);
        }
    
        public virtual int ActualizarEntrega(Nullable<int> pedidoId, Nullable<System.DateTime> fechaEntrega, string direccionEntrega, string articulosEntregados, string observacionesAdicionales, string estadoEntrega, string nombreDestinatario, string correoElectronico)
        {
            var pedidoIdParameter = pedidoId.HasValue ?
                new ObjectParameter("PedidoId", pedidoId) :
                new ObjectParameter("PedidoId", typeof(int));
    
            var fechaEntregaParameter = fechaEntrega.HasValue ?
                new ObjectParameter("FechaEntrega", fechaEntrega) :
                new ObjectParameter("FechaEntrega", typeof(System.DateTime));
    
            var direccionEntregaParameter = direccionEntrega != null ?
                new ObjectParameter("DireccionEntrega", direccionEntrega) :
                new ObjectParameter("DireccionEntrega", typeof(string));
    
            var articulosEntregadosParameter = articulosEntregados != null ?
                new ObjectParameter("ArticulosEntregados", articulosEntregados) :
                new ObjectParameter("ArticulosEntregados", typeof(string));
    
            var observacionesAdicionalesParameter = observacionesAdicionales != null ?
                new ObjectParameter("ObservacionesAdicionales", observacionesAdicionales) :
                new ObjectParameter("ObservacionesAdicionales", typeof(string));
    
            var estadoEntregaParameter = estadoEntrega != null ?
                new ObjectParameter("EstadoEntrega", estadoEntrega) :
                new ObjectParameter("EstadoEntrega", typeof(string));
    
            var nombreDestinatarioParameter = nombreDestinatario != null ?
                new ObjectParameter("NombreDestinatario", nombreDestinatario) :
                new ObjectParameter("NombreDestinatario", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEntrega", pedidoIdParameter, fechaEntregaParameter, direccionEntregaParameter, articulosEntregadosParameter, observacionesAdicionalesParameter, estadoEntregaParameter, nombreDestinatarioParameter, correoElectronicoParameter);
        }
    
        public virtual ObjectResult<string> AprobarRechazarVacaciones(Nullable<int> solicitudId, string estado, string motivoRechazo, Nullable<int> idUsuario)
        {
            var solicitudIdParameter = solicitudId.HasValue ?
                new ObjectParameter("SolicitudId", solicitudId) :
                new ObjectParameter("SolicitudId", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var motivoRechazoParameter = motivoRechazo != null ?
                new ObjectParameter("MotivoRechazo", motivoRechazo) :
                new ObjectParameter("MotivoRechazo", typeof(string));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AprobarRechazarVacaciones", solicitudIdParameter, estadoParameter, motivoRechazoParameter, idUsuarioParameter);
        }
    
        public virtual int CambiarContrasenna(ObjectParameter id, string nuevaContrasena)
        {
            var nuevaContrasenaParameter = nuevaContrasena != null ?
                new ObjectParameter("nuevaContrasena", nuevaContrasena) :
                new ObjectParameter("nuevaContrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarContrasenna", id, nuevaContrasenaParameter);
        }
    
        public virtual int CambiarEstadoLectura(Nullable<int> idNotificacion)
        {
            var idNotificacionParameter = idNotificacion.HasValue ?
                new ObjectParameter("IdNotificacion", idNotificacion) :
                new ObjectParameter("IdNotificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstadoLectura", idNotificacionParameter);
        }
    
        public virtual int CancelarEntrega(Nullable<int> pedidoId)
        {
            var pedidoIdParameter = pedidoId.HasValue ?
                new ObjectParameter("PedidoId", pedidoId) :
                new ObjectParameter("PedidoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelarEntrega", pedidoIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CantidadNotificacionesNuevas(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CantidadNotificacionesNuevas", idUsuarioParameter);
        }
    
        public virtual ObjectResult<cierre_contable_Result> cierre_contable(Nullable<System.DateTime> fecha_Inicio, Nullable<System.DateTime> fecha_Fin)
        {
            var fecha_InicioParameter = fecha_Inicio.HasValue ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(System.DateTime));
    
            var fecha_FinParameter = fecha_Fin.HasValue ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cierre_contable_Result>("cierre_contable", fecha_InicioParameter, fecha_FinParameter);
        }
    
        public virtual ObjectResult<ConsultarCarrito_Result> ConsultarCarrito(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCarrito_Result>("ConsultarCarrito", idUsuarioParameter);
        }
    
        public virtual ObjectResult<ConsultarClientes_Result> ConsultarClientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarClientes_Result>("ConsultarClientes");
        }
    
        public virtual ObjectResult<ConsultarDetallePedido_Result> ConsultarDetallePedido(Nullable<int> idPedido)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarDetallePedido_Result>("ConsultarDetallePedido", idPedidoParameter);
        }
    
        public virtual ObjectResult<ConsultarPedidos_Result> ConsultarPedidos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPedidos_Result>("ConsultarPedidos");
        }
    
        public virtual ObjectResult<datosRecibo_Result> datosRecibo(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("IdFactura", idFactura) :
                new ObjectParameter("IdFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<datosRecibo_Result>("datosRecibo", idFacturaParameter);
        }
    
        public virtual ObjectResult<distribMetodoPago_Result> distribMetodoPago(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<distribMetodoPago_Result>("distribMetodoPago", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual int EditarEmpleado(Nullable<int> id, string nombre, string apellidos, string correoElectronico, string telefono, string direccion, Nullable<System.DateTime> fechaNacimiento, string numeroIdentificacion, Nullable<int> departamentoId, Nullable<int> puestoId, Nullable<int> rolId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var numeroIdentificacionParameter = numeroIdentificacion != null ?
                new ObjectParameter("NumeroIdentificacion", numeroIdentificacion) :
                new ObjectParameter("NumeroIdentificacion", typeof(string));
    
            var departamentoIdParameter = departamentoId.HasValue ?
                new ObjectParameter("DepartamentoId", departamentoId) :
                new ObjectParameter("DepartamentoId", typeof(int));
    
            var puestoIdParameter = puestoId.HasValue ?
                new ObjectParameter("PuestoId", puestoId) :
                new ObjectParameter("PuestoId", typeof(int));
    
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("RolId", rolId) :
                new ObjectParameter("RolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarEmpleado", idParameter, nombreParameter, apellidosParameter, correoElectronicoParameter, telefonoParameter, direccionParameter, fechaNacimientoParameter, numeroIdentificacionParameter, departamentoIdParameter, puestoIdParameter, rolIdParameter);
        }
    
        public virtual int EliminarProductoCarrito(Nullable<int> idUsuario, Nullable<int> idProducto)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarProductoCarrito", idUsuarioParameter, idProductoParameter);
        }
    
        public virtual int FacturarPedido(Nullable<int> id_Pedido, Nullable<int> tipo_venta)
        {
            var id_PedidoParameter = id_Pedido.HasValue ?
                new ObjectParameter("Id_Pedido", id_Pedido) :
                new ObjectParameter("Id_Pedido", typeof(int));
    
            var tipo_ventaParameter = tipo_venta.HasValue ?
                new ObjectParameter("Tipo_venta", tipo_venta) :
                new ObjectParameter("Tipo_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FacturarPedido", id_PedidoParameter, tipo_ventaParameter);
        }
    
        public virtual ObjectResult<GeneraFacturaDetalle_Result> GeneraFacturaDetalle(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("IdFactura", idFactura) :
                new ObjectParameter("IdFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneraFacturaDetalle_Result>("GeneraFacturaDetalle", idFacturaParameter);
        }
    
        public virtual ObjectResult<GeneraFacturaEncabezado_Result> GeneraFacturaEncabezado(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("IdFactura", idFactura) :
                new ObjectParameter("IdFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneraFacturaEncabezado_Result>("GeneraFacturaEncabezado", idFacturaParameter);
        }
    
        public virtual ObjectResult<GenerarBalanceGeneral_Result> GenerarBalanceGeneral(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenerarBalanceGeneral_Result>("GenerarBalanceGeneral", fechaParameter);
        }
    
        public virtual ObjectResult<GenerarEstadoResultados_Result> GenerarEstadoResultados(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenerarEstadoResultados_Result>("GenerarEstadoResultados", fechaParameter);
        }
    
        public virtual ObjectResult<GetEmpleadoById_Result> GetEmpleadoById(Nullable<int> empleadoId)
        {
            var empleadoIdParameter = empleadoId.HasValue ?
                new ObjectParameter("empleadoId", empleadoId) :
                new ObjectParameter("empleadoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpleadoById_Result>("GetEmpleadoById", empleadoIdParameter);
        }
    
        public virtual ObjectResult<HistorialAjustesCxC_Result> HistorialAjustesCxC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HistorialAjustesCxC_Result>("HistorialAjustesCxC");
        }
    
        public virtual ObjectResult<HistorialAjustesCxP_Result> HistorialAjustesCxP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HistorialAjustesCxP_Result>("HistorialAjustesCxP");
        }
    
        public virtual ObjectResult<Informe_Ventas_Result> Informe_Ventas(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Informe_Ventas_Result>("Informe_Ventas", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual int iniciarSesion(string correo_electronico, string contrasena, ObjectParameter id, ObjectParameter loginSuccess, ObjectParameter rol, ObjectParameter usuario)
        {
            var correo_electronicoParameter = correo_electronico != null ?
                new ObjectParameter("correo_electronico", correo_electronico) :
                new ObjectParameter("correo_electronico", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("iniciarSesion", correo_electronicoParameter, contrasenaParameter, id, loginSuccess, rol, usuario);
        }
    
        public virtual ObjectResult<ListaCuentasContables_Result> ListaCuentasContables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaCuentasContables_Result>("ListaCuentasContables");
        }
    
        public virtual ObjectResult<ListaEntidadesFinancieras_Result> ListaEntidadesFinancieras()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaEntidadesFinancieras_Result>("ListaEntidadesFinancieras");
        }
    
        public virtual ObjectResult<listaMetodoPago_Result> listaMetodoPago()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listaMetodoPago_Result>("listaMetodoPago");
        }
    
        public virtual ObjectResult<ListarCxC_Result> ListarCxC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarCxC_Result>("ListarCxC");
        }
    
        public virtual ObjectResult<ListarCxP_Result> ListarCxP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarCxP_Result>("ListarCxP");
        }
    
        public virtual ObjectResult<ListarEntregas_Result> ListarEntregas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEntregas_Result>("ListarEntregas");
        }
    
        public virtual ObjectResult<listaTipoVenta_Result> listaTipoVenta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listaTipoVenta_Result>("listaTipoVenta");
        }
    
        public virtual ObjectResult<NotificacionesVencimientoCuentas_Result> NotificacionesVencimientoCuentas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NotificacionesVencimientoCuentas_Result>("NotificacionesVencimientoCuentas");
        }
    
        public virtual ObjectResult<Nullable<int>> NuevaNotificacion(Nullable<int> idUsuarioRegistra, Nullable<int> idModulo, Nullable<int> idNotificacionBasica, Nullable<int> prioridad, Nullable<int> idReferencia, Nullable<int> idUsuarioReceptor)
        {
            var idUsuarioRegistraParameter = idUsuarioRegistra.HasValue ?
                new ObjectParameter("IdUsuarioRegistra", idUsuarioRegistra) :
                new ObjectParameter("IdUsuarioRegistra", typeof(int));
    
            var idModuloParameter = idModulo.HasValue ?
                new ObjectParameter("IdModulo", idModulo) :
                new ObjectParameter("IdModulo", typeof(int));
    
            var idNotificacionBasicaParameter = idNotificacionBasica.HasValue ?
                new ObjectParameter("IdNotificacionBasica", idNotificacionBasica) :
                new ObjectParameter("IdNotificacionBasica", typeof(int));
    
            var prioridadParameter = prioridad.HasValue ?
                new ObjectParameter("prioridad", prioridad) :
                new ObjectParameter("prioridad", typeof(int));
    
            var idReferenciaParameter = idReferencia.HasValue ?
                new ObjectParameter("IdReferencia", idReferencia) :
                new ObjectParameter("IdReferencia", typeof(int));
    
            var idUsuarioReceptorParameter = idUsuarioReceptor.HasValue ?
                new ObjectParameter("IdUsuarioReceptor", idUsuarioReceptor) :
                new ObjectParameter("IdUsuarioReceptor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("NuevaNotificacion", idUsuarioRegistraParameter, idModuloParameter, idNotificacionBasicaParameter, prioridadParameter, idReferenciaParameter, idUsuarioReceptorParameter);
        }
    
        public virtual ObjectResult<ObtenerEmpleadoPorFiltro_Result> ObtenerEmpleadoPorFiltro(string nombre, string correoElectronico, string numeroCedula)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var numeroCedulaParameter = numeroCedula != null ?
                new ObjectParameter("NumeroCedula", numeroCedula) :
                new ObjectParameter("NumeroCedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerEmpleadoPorFiltro_Result>("ObtenerEmpleadoPorFiltro", nombreParameter, correoElectronicoParameter, numeroCedulaParameter);
        }
    
        public virtual ObjectResult<ObtenerHistorialSolicitudesVacaciones_Result> ObtenerHistorialSolicitudesVacaciones(Nullable<int> id_empleado)
        {
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerHistorialSolicitudesVacaciones_Result>("ObtenerHistorialSolicitudesVacaciones", id_empleadoParameter);
        }
    
        public virtual ObjectResult<ObtenerNotificaciones_Result> ObtenerNotificaciones(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerNotificaciones_Result>("ObtenerNotificaciones", idUsuarioParameter);
        }
    
        public virtual int PagarCxC(Nullable<int> id_Pedido, Nullable<decimal> monto, Nullable<int> metodo_Pago, string entidadFinanciera, Nullable<decimal> transaccionReferencia, string descripcion, Nullable<int> id_Usuario)
        {
            var id_PedidoParameter = id_Pedido.HasValue ?
                new ObjectParameter("Id_Pedido", id_Pedido) :
                new ObjectParameter("Id_Pedido", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            var metodo_PagoParameter = metodo_Pago.HasValue ?
                new ObjectParameter("Metodo_Pago", metodo_Pago) :
                new ObjectParameter("Metodo_Pago", typeof(int));
    
            var entidadFinancieraParameter = entidadFinanciera != null ?
                new ObjectParameter("EntidadFinanciera", entidadFinanciera) :
                new ObjectParameter("EntidadFinanciera", typeof(string));
    
            var transaccionReferenciaParameter = transaccionReferencia.HasValue ?
                new ObjectParameter("TransaccionReferencia", transaccionReferencia) :
                new ObjectParameter("TransaccionReferencia", typeof(decimal));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("Id_Usuario", id_Usuario) :
                new ObjectParameter("Id_Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PagarCxC", id_PedidoParameter, montoParameter, metodo_PagoParameter, entidadFinancieraParameter, transaccionReferenciaParameter, descripcionParameter, id_UsuarioParameter);
        }
    
        public virtual int PagarCxP(Nullable<int> id_Compra, Nullable<decimal> monto, Nullable<int> metodo_Pago, string entidadFinanciera, Nullable<decimal> transaccionReferencia, string descripcion, Nullable<int> id_Usuario)
        {
            var id_CompraParameter = id_Compra.HasValue ?
                new ObjectParameter("Id_Compra", id_Compra) :
                new ObjectParameter("Id_Compra", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            var metodo_PagoParameter = metodo_Pago.HasValue ?
                new ObjectParameter("Metodo_Pago", metodo_Pago) :
                new ObjectParameter("Metodo_Pago", typeof(int));
    
            var entidadFinancieraParameter = entidadFinanciera != null ?
                new ObjectParameter("EntidadFinanciera", entidadFinanciera) :
                new ObjectParameter("EntidadFinanciera", typeof(string));
    
            var transaccionReferenciaParameter = transaccionReferencia.HasValue ?
                new ObjectParameter("TransaccionReferencia", transaccionReferencia) :
                new ObjectParameter("TransaccionReferencia", typeof(decimal));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("Id_Usuario", id_Usuario) :
                new ObjectParameter("Id_Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PagarCxP", id_CompraParameter, montoParameter, metodo_PagoParameter, entidadFinancieraParameter, transaccionReferenciaParameter, descripcionParameter, id_UsuarioParameter);
        }
    
        public virtual int PagoPedido(Nullable<int> id_Pedido, Nullable<int> tipo_venta, Nullable<int> metodo_Pago, string entidadFinanciera, Nullable<decimal> transaccionReferencia, Nullable<decimal> monto, string descripcion, Nullable<int> id_Usuario)
        {
            var id_PedidoParameter = id_Pedido.HasValue ?
                new ObjectParameter("Id_Pedido", id_Pedido) :
                new ObjectParameter("Id_Pedido", typeof(int));
    
            var tipo_ventaParameter = tipo_venta.HasValue ?
                new ObjectParameter("Tipo_venta", tipo_venta) :
                new ObjectParameter("Tipo_venta", typeof(int));
    
            var metodo_PagoParameter = metodo_Pago.HasValue ?
                new ObjectParameter("Metodo_Pago", metodo_Pago) :
                new ObjectParameter("Metodo_Pago", typeof(int));
    
            var entidadFinancieraParameter = entidadFinanciera != null ?
                new ObjectParameter("EntidadFinanciera", entidadFinanciera) :
                new ObjectParameter("EntidadFinanciera", typeof(string));
    
            var transaccionReferenciaParameter = transaccionReferencia.HasValue ?
                new ObjectParameter("TransaccionReferencia", transaccionReferencia) :
                new ObjectParameter("TransaccionReferencia", typeof(decimal));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("Id_Usuario", id_Usuario) :
                new ObjectParameter("Id_Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PagoPedido", id_PedidoParameter, tipo_ventaParameter, metodo_PagoParameter, entidadFinancieraParameter, transaccionReferenciaParameter, montoParameter, descripcionParameter, id_UsuarioParameter);
        }
    
        public virtual int ProcesarCarrito(Nullable<int> idCliente, Nullable<int> idUsuario, Nullable<int> estado, string notasAdicionales)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var notasAdicionalesParameter = notasAdicionales != null ?
                new ObjectParameter("NotasAdicionales", notasAdicionales) :
                new ObjectParameter("NotasAdicionales", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcesarCarrito", idClienteParameter, idUsuarioParameter, estadoParameter, notasAdicionalesParameter);
        }
    
        public virtual int RecordatorioCompraInsumos(Nullable<int> idNotificacionBasica, Nullable<int> tiempoTranscurridoHoras)
        {
            var idNotificacionBasicaParameter = idNotificacionBasica.HasValue ?
                new ObjectParameter("IdNotificacionBasica", idNotificacionBasica) :
                new ObjectParameter("IdNotificacionBasica", typeof(int));
    
            var tiempoTranscurridoHorasParameter = tiempoTranscurridoHoras.HasValue ?
                new ObjectParameter("TiempoTranscurridoHoras", tiempoTranscurridoHoras) :
                new ObjectParameter("TiempoTranscurridoHoras", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecordatorioCompraInsumos", idNotificacionBasicaParameter, tiempoTranscurridoHorasParameter);
        }
    
        public virtual int RecordatorioNotificaciones(Nullable<int> idNotificacionBasica, Nullable<int> tiempoTranscurridoHoras)
        {
            var idNotificacionBasicaParameter = idNotificacionBasica.HasValue ?
                new ObjectParameter("IdNotificacionBasica", idNotificacionBasica) :
                new ObjectParameter("IdNotificacionBasica", typeof(int));
    
            var tiempoTranscurridoHorasParameter = tiempoTranscurridoHoras.HasValue ?
                new ObjectParameter("TiempoTranscurridoHoras", tiempoTranscurridoHoras) :
                new ObjectParameter("TiempoTranscurridoHoras", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecordatorioNotificaciones", idNotificacionBasicaParameter, tiempoTranscurridoHorasParameter);
        }
    
        public virtual int RecordatorioVencimientoCxC(Nullable<int> idNotificacionBasica, Nullable<int> tiempoTranscurridoDias)
        {
            var idNotificacionBasicaParameter = idNotificacionBasica.HasValue ?
                new ObjectParameter("IdNotificacionBasica", idNotificacionBasica) :
                new ObjectParameter("IdNotificacionBasica", typeof(int));
    
            var tiempoTranscurridoDiasParameter = tiempoTranscurridoDias.HasValue ?
                new ObjectParameter("TiempoTranscurridoDias", tiempoTranscurridoDias) :
                new ObjectParameter("TiempoTranscurridoDias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecordatorioVencimientoCxC", idNotificacionBasicaParameter, tiempoTranscurridoDiasParameter);
        }
    
        public virtual int RecordatorioVencimientoCxP(Nullable<int> idNotificacionBasica, Nullable<int> tiempoTranscurridoDias)
        {
            var idNotificacionBasicaParameter = idNotificacionBasica.HasValue ?
                new ObjectParameter("IdNotificacionBasica", idNotificacionBasica) :
                new ObjectParameter("IdNotificacionBasica", typeof(int));
    
            var tiempoTranscurridoDiasParameter = tiempoTranscurridoDias.HasValue ?
                new ObjectParameter("TiempoTranscurridoDias", tiempoTranscurridoDias) :
                new ObjectParameter("TiempoTranscurridoDias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecordatorioVencimientoCxP", idNotificacionBasicaParameter, tiempoTranscurridoDiasParameter);
        }
    
        public virtual int RegistrarCarrito(Nullable<int> idUsuario, Nullable<int> idProducto, Nullable<int> cantidad)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarCarrito", idUsuarioParameter, idProductoParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> registrarEmpleado(string nombre, string apellidos, string numeroIdentificacion, Nullable<System.DateTime> fechaNacimiento, string direccion, string telefono, string correoElectronico, Nullable<int> departamentoID, Nullable<int> puestoID, Nullable<int> rolID, Nullable<bool> estadoEmpleado, string usuario, string contrasena)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var numeroIdentificacionParameter = numeroIdentificacion != null ?
                new ObjectParameter("NumeroIdentificacion", numeroIdentificacion) :
                new ObjectParameter("NumeroIdentificacion", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var departamentoIDParameter = departamentoID.HasValue ?
                new ObjectParameter("DepartamentoID", departamentoID) :
                new ObjectParameter("DepartamentoID", typeof(int));
    
            var puestoIDParameter = puestoID.HasValue ?
                new ObjectParameter("PuestoID", puestoID) :
                new ObjectParameter("PuestoID", typeof(int));
    
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("RolID", rolID) :
                new ObjectParameter("RolID", typeof(int));
    
            var estadoEmpleadoParameter = estadoEmpleado.HasValue ?
                new ObjectParameter("EstadoEmpleado", estadoEmpleado) :
                new ObjectParameter("EstadoEmpleado", typeof(bool));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("registrarEmpleado", nombreParameter, apellidosParameter, numeroIdentificacionParameter, fechaNacimientoParameter, direccionParameter, telefonoParameter, correoElectronicoParameter, departamentoIDParameter, puestoIDParameter, rolIDParameter, estadoEmpleadoParameter, usuarioParameter, contrasenaParameter);
        }
    
        public virtual int RegistrarEntrega(Nullable<int> pedidoId, Nullable<System.DateTime> fechaEntrega, string direccionEntrega, string articulosEntregados, string observacionesAdicionales)
        {
            var pedidoIdParameter = pedidoId.HasValue ?
                new ObjectParameter("PedidoId", pedidoId) :
                new ObjectParameter("PedidoId", typeof(int));
    
            var fechaEntregaParameter = fechaEntrega.HasValue ?
                new ObjectParameter("FechaEntrega", fechaEntrega) :
                new ObjectParameter("FechaEntrega", typeof(System.DateTime));
    
            var direccionEntregaParameter = direccionEntrega != null ?
                new ObjectParameter("DireccionEntrega", direccionEntrega) :
                new ObjectParameter("DireccionEntrega", typeof(string));
    
            var articulosEntregadosParameter = articulosEntregados != null ?
                new ObjectParameter("ArticulosEntregados", articulosEntregados) :
                new ObjectParameter("ArticulosEntregados", typeof(string));
    
            var observacionesAdicionalesParameter = observacionesAdicionales != null ?
                new ObjectParameter("ObservacionesAdicionales", observacionesAdicionales) :
                new ObjectParameter("ObservacionesAdicionales", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarEntrega", pedidoIdParameter, fechaEntregaParameter, direccionEntregaParameter, articulosEntregadosParameter, observacionesAdicionalesParameter);
        }
    
        public virtual int RegistrarTransaccionesFinancieras(Nullable<int> cuenta, Nullable<decimal> monto, string descripcion, Nullable<int> id_Usuario)
        {
            var cuentaParameter = cuenta.HasValue ?
                new ObjectParameter("Cuenta", cuenta) :
                new ObjectParameter("Cuenta", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var id_UsuarioParameter = id_Usuario.HasValue ?
                new ObjectParameter("Id_Usuario", id_Usuario) :
                new ObjectParameter("Id_Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarTransaccionesFinancieras", cuentaParameter, montoParameter, descripcionParameter, id_UsuarioParameter);
        }
    
        public virtual int SolicitarVacaciones(Nullable<int> empleado_id, Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin, Nullable<int> dias_solicitados, string observaciones, string motivo_rechazo)
        {
            var empleado_idParameter = empleado_id.HasValue ?
                new ObjectParameter("empleado_id", empleado_id) :
                new ObjectParameter("empleado_id", typeof(int));
    
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var dias_solicitadosParameter = dias_solicitados.HasValue ?
                new ObjectParameter("dias_solicitados", dias_solicitados) :
                new ObjectParameter("dias_solicitados", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var motivo_rechazoParameter = motivo_rechazo != null ?
                new ObjectParameter("motivo_rechazo", motivo_rechazo) :
                new ObjectParameter("motivo_rechazo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SolicitarVacaciones", empleado_idParameter, fecha_inicioParameter, fecha_finParameter, dias_solicitadosParameter, observacionesParameter, motivo_rechazoParameter);
        }
    
        public virtual ObjectResult<sp_ListarTodasVacaciones_Result> sp_ListarTodasVacaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarTodasVacaciones_Result>("sp_ListarTodasVacaciones");
        }
    
        public virtual ObjectResult<sp_ObtenerHistorialVacaciones_Result> sp_ObtenerHistorialVacaciones(Nullable<int> empleado_id)
        {
            var empleado_idParameter = empleado_id.HasValue ?
                new ObjectParameter("empleado_id", empleado_id) :
                new ObjectParameter("empleado_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerHistorialVacaciones_Result>("sp_ObtenerHistorialVacaciones", empleado_idParameter);
        }
    
        public virtual ObjectResult<top5Clientes_Result> top5Clientes(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<top5Clientes_Result>("top5Clientes", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UltimoTicketUsuario(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UltimoTicketUsuario", idUsuarioParameter);
        }
    
        public virtual ObjectResult<ValidarCorreo_Result> ValidarCorreo(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidarCorreo_Result>("ValidarCorreo", emailParameter);
        }
    
        public virtual ObjectResult<ValidarExistencias_Result> ValidarExistencias(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidarExistencias_Result>("ValidarExistencias", idUsuarioParameter);
        }
    }
}
