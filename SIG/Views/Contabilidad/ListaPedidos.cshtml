@model SIG.Entidades.PedidoFactura
@{
    ViewBag.Title = "ListaPedidos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<body style="margin: 0; padding: 0; background-color: #101010;">
    <div class="d-flex flex-column min-vh-800" style="background-color: #f3f5f8; margin-left: 3.3%; padding: 20px; border-radius: 15px; height: auto; width: 100%">
        <div class="text-center mb-4">
            <h2 style="font-weight: bold; color: #111111; border-bottom: 2px solid #111111; padding-bottom: 10px;">
                Lista de Pedidos
            </h2>
        </div>

        @if (ViewBag.msj != null)
        {
            <div class="alert alert-info text-center" role="alert">
                @ViewBag.msj
            </div>
        }


        <div>
            <table id="tablaPedidos" class="table table-modern table-striped table-hover">
                <thead>
                    <tr>
                        <th data-orderable="true">Id pedido</th>
                        <th data-orderable="true">Fecha</th>
                        <th data-orderable="true">Monto</th>
                        <th data-orderable="true">Impuestos</th>
                        <th data-orderable="true">Estado</th>
                        <th data-orderable="true">Total transacción</th>
                        <th data-orderable="false">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Pedidos)
                    {
                        <tr class="@(item.estadoD == "Registrado" ? "table-success" : item.estadoD == "Al dia" ? "table-warning" : item.estadoD == "Pagado" ? "table-primary" : "")">
                            <td>@item.id</td>
                            <td>@(item.fecha.HasValue ? item.fecha.Value.ToString("dd/MM/yyyy") : "")</td>
                            <td>₡@item.monto.ToString("N2")</td>
                            <td>₡@item.impuesto.ToString("N2")</td>
                            <td>@item.estadoD</td>
                            <td>₡@item.total_transaccion.Value.ToString("N2")</td>
                            <td class="text-center">
                                <div class="btn-group">
                                    @if (item.estadoD == "Registrado")
                                    {
                                        <button type="button" class="btn btn-black AbrirModalFacturar" data-bs-toggle="modal" data-bs-target="#ModalFacturar"
                                                data-id="@item.id">
                                            <i class="bi bi-receipt icon-green"></i>
                                        </button>
                                    }
                                    else
                                    {
                                        if (item.estadoD == "Facturado")
                                        {
                                            <button type="button" class="btn btn-black AbrirModalPagar" data-bs-toggle="modal" data-bs-target="#ModalPagoRecibo"
                                                    data-id="@item.id" data-tipo="@item.tipo_venta" data-total="@item.total_transaccion.Value">
                                                <i class="bi bi-cash icon-green"></i>
                                            </button>
                                        }
                                        <a class="btn btn-black" href="@Url.Action("GenFacturaPdf", "Contabilidad", new { idFactura = item.id})">
                                            <i class="bi bi-file-earmark-pdf icon-green"></i>
                                        </a>
                                    }
                                    <a class="btn btn-blue" href="@Url.Action("DetallePedido", "Contabilidad", new { idPedido = item.id})">
                                        Ver Productos
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="modal fade" id="ModalFacturar" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title fs-5" id="exampleModalLabel">Detalles de facturación</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("FacturarPedido", "Contabilidad"))
                    {
                        <div class="modal-body">
                            @Html.Hidden("idFacturar", "")
                            @Html.Label("Tipo de venta", new { @for = "tipoVenta" })
                            @Html.DropDownListFor(m => m.tipo_venta, ViewBag.TipoVentas as List<SelectListItem>, new { @class = "form-select", @id = "tipoVenta", @name = "tipoVenta", @required = "true" })
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Facturar</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ModalPagoRecibo" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title fs-5" id="exampleModalLabel">Pago y recibo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("ContaPagoFactura", "Contabilidad"))
                    {
                        <div class="modal-body">
                            @Html.Hidden("idPagar", "")
                            @Html.Hidden("tipo_venta", "", new { id = "tipo_venta" })
                            @Html.Label("Tipo de venta", new { @for = "tipoVenta" })
                            @Html.DropDownListFor(m => m.tipo_venta, ViewBag.TipoVentas as List<SelectListItem>, new { @class = "form-select", @id = "tipoVenta", @name = "tipoVenta", @disabled = "true" })
                            <div id="metodo-container" style="display:none;">
                                @Html.Label("Método de pago", new { @for = "metodo" })
                                @Html.DropDownListFor(m => m.metodo_pago, ViewBag.MetodoPago as List<SelectListItem>, new { @class = "form-select", @id = "metodo", metodo = "metodo", @required = "true" })
                            </div>

                            <div id="financiera-container" style="display:none;">
                                @Html.Label("Entidad Financiera", new { @for = "financieras" })
                                @Html.DropDownListFor(m => m.entidadFinanciera, ViewBag.EntidadesFinancieras as List<SelectListItem>, new { @class = "form-select", @id = "financieras", @name = "financieras" })

                                @Html.Label("Número de trasacción de referencia", new { @for = "referencia" })
                                @Html.TextBoxFor(m => m.transaccionRef, new { @type = "number", @class = "form-control", @id = "referencia", @name = "referencia", @required = "true" })
                            </div>
                            <div id="Abono-container" style="display:none;">
                                @Html.Label("Ingrese el monto a pagar", new { @for = "abono" })
                                @Html.TextBoxFor(m => m.montoPago, new { @class = "form-control", @id = "abono", @name = "abono", @required = "true" })
                            </div>

                            @Html.Label("Descripción de la transacción", new { @for = "referencia" })
                            @Html.TextBoxFor(m => m.descripcion, new { @class = "form-control", @id = "referencia", @name = "referencia", @maxlength = "100", @required = "true" })
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Pagar y generar recibo</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>


    <script>
        $(document).ready(function () {
            $("#tablaPedidos").DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/2.0.2/i18n/es-ES.json'
                },
                paging: true,
                searching: true,
                ordering: true,
                info: true,
                columnDefs: [
                    { orderable: false, targets: [6] }
                ]
            });
        });

        $(document).ready(function () {
            function verificaTipoVentaYMetodoPago() {
                var tipoVenta = $('#tipoVenta').val();
                var metodoPago = $('#metodo').val();

                $('#metodo-container').show();

                // Visibilidad condicional
                if (tipoVenta == '1' && metodoPago == '1') { // Venta al contado y efectivo
                    $('#Abono-container').hide();
                    $('#financiera-container').hide();
                } else if (tipoVenta == '1' && metodoPago != '1') { // Venta a crédito con método diferente a efectivo
                    $('#Abono-container').hide();
                    $('#financiera-container').show();
                }
                else if (tipoVenta == '2' && metodoPago != '1') { // Venta a crédito con método diferente a efectivo
                    $('#Abono-container').show();
                    $('#financiera-container').show();
                } else { // Venta a crédito y efectivo
                    $('#Abono-container').show();
                    $('#financiera-container').hide();
                }
            }

            verificaTipoVentaYMetodoPago();

            $('#tipoVenta').change(verificaTipoVentaYMetodoPago);
            $('#metodo').change(verificaTipoVentaYMetodoPago);

            $(document).on("click", ".AbrirModalPagar", function () {
                var pedidoId = $(this).attr('data-id');
                var tipoVenta = $(this).attr('data-tipo');
                var totalTransaccion = parseFloat($(this).attr('data-total'));
                $("#idPagar").val(pedidoId);
                $("#tipoVenta").val(tipoVenta);
                //$("#total_transaccion").val(totalTransaccion);
                $("#ModalPagoRecibo").data("total", totalTransaccion);
                verificaTipoVentaYMetodoPago();
            });
        });


        $(document).on("click", ".AbrirModalFacturar", function () {
            $("#idFacturar").val($(this).attr('data-id'));
        });
        $(document).on("click", ".AbrirModalPagar", function () {
            $("#idPagar").val($(this).attr('data-id'));
            $("#ModalPagoRecibo #tipoVenta").val($(this).attr('data-tipo'));
            $("#ModalPagoRecibo #tipo_venta").val($(this).attr('data-tipo'));
        });

        $("#abono").on("input", function () {
            var abono = parseFloat($(this).val());
            var totalTransaccion = $("#ModalPagoRecibo").data("total");

            if (abono > totalTransaccion) {
                alert("El monto del abono no puede ser superior al total de la transacción: " + totalTransaccion.toFixed(2));
                $(this).val(totalTransaccion.toFixed(2));
            }
        });
        $(document).ready(function () {
            $("#ModalPagoRecibo form").on("submit", function (e) {
                e.preventDefault();

                var formData = $(this).serialize();
                $.ajax({
                    url: $(this).attr("action"),
                    type: $(this).attr("method"),
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            $('#ModalPagoRecibo').modal('hide');

                            window.location.href = response.pdfUrl;


                            setTimeout(function () {
                                window.location.href = '/Contabilidad/ListaPedidos';
                            }, 1000);
                        } else {
                            alert(response.message || "Hubo un error al procesar el pago.");
                        }
                    },
                    error: function () {
                        alert("Ocurrió un error en la solicitud. Por favor, intenta de nuevo.");
                    }
                });
            });
        });
    </script>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">


    <style>
        .table-modern {
            border: 1px solid black;
            border-radius: 0;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.4);
            background-color: #fff;
            transition: all 0.3s ease-in-out;
            border-collapse: collapse;
            width: 100%;
            font-family: 'Poppins', sans-serif;
        }

            .table-modern:hover {
                box-shadow: 0 6px 18px rgba(0, 0, 0, 0.5);
                transform: scale(1.01);
            }

            .table-modern thead {
                background: white;
                color: black;
                font-weight: bold;
                text-transform: uppercase;
                letter-spacing: 1px;
                border-bottom: 2px solid black;
            }

            .table-modern th, .table-modern td {
                padding: 14px;
                text-align: center;
                vertical-align: middle;
                border: 1px solid black;
            }

            .table-modern tbody tr {
                transition: background-color 0.3s ease-in-out;
            }

                .table-modern tbody tr:nth-child(even) {
                    background-color: #f0f8ff;
                }

                .table-modern tbody tr:nth-child(odd) {
                    background-color: #e6f7ff;
                }

                /* Cambio de color al pasar el cursor */
                .table-modern tbody tr:hover {
                    background-color: rgba(144, 238, 144, 1) !important; /* Verde claro sólido sin transparencia */
                }

                /* Animación de aparición */
                .table-modern tbody tr.fade-in {
                    opacity: 0;
                    transform: scale(0.98);
                    transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
                    opacity: 1;
                    transform: scale(1);
                }

        /* Botón negro con icono verde */
        .btn-black {
            background-color: #222222;
            border: none;
            border-radius: 6px;
            padding: 10px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 40px;
            transition: transform 0.2s ease-in-out, background 0.3s ease-in-out;
        }

            .btn-black:hover {
                background-color: #333333;
                transform: scale(1.1);
            }

        .btn-blue {
            background: linear-gradient(to right, #65a9ca, #5481a2);
            color: white;
            font-size: 14px;
            font-weight: bold;
            border-radius: 6px;
            padding: 8px 12px;
            transition: transform 0.2s ease-in-out, background 0.3s ease-in-out;
        }

            .btn-blue:hover {
                transform: scale(1.1);
                background: linear-gradient(to right, #2c3e50, #4a6d89);
            }

        /* Alineación de botones */
        .btn-group {
            display: flex;
            gap: 5px;
            justify-content: center;
        }

        /* Iconos verdes dentro de los botones negros */
        .icon-green {
            font-size: 20px;
            color: #01e173;
        }
    </style>
</body>
